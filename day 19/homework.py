"""შექმენით ფუნქცია, რომელსაც გადაეცემა 1-იდან 20-ის ჩათვლით რიცხვების სია. 
თქვენ უნდა დააბრუნოთ გაფილტრული სია, სადაც უკვე მარტო 4-ის ჯერადები იქნება."""

# def one_to_twenty():
#     list1 = []
#     for i in range(20):
#         if i % 4 == 0:
#             list1.append(i)
#     return list1

# print(one_to_twenty())

###############################################################################################################################################

"""შექმენით ფუნქცია, რომელსაც გადასცემთ მომხმარებლისგან მიღებულ სახელსა და გვარს. შემდეგ ისინი დაამატეთ სიაში და დააბრუნეთ სია."""


# def user_info():
#     name = input("enter youre name: ")
#     lastname = input("enter youre lastname: ")
#     user_info_list = []
#     user_info_list.append(name)
#     user_info_list.append(lastname)

#     return user_info_list

# print(user_info())

###############################################################################################################################################

"""
მომხმარებელს შეეკითხეთ საწყისი და საბოლოო რიცხვები. ეს რიცხვები გადაეცით ფუნქციას, for ციკლით სიაში
შეინახეთ მათ შორის არსებული რიცხვები. შემდეგ მოახდინეთ გაფილტვრა, ისევ for ციკლით განიხილეთ თითოეული
რიცხვი - თუ რიცხვი ლუწი იქნება, ახალ სიაში დაამატეთ მისი მეორე ხარისხი, 
ხოლო თუ კენტი იქნება სიაში დაამატეთ მისი კვადრატული ფესვი (0.5 ხარისხი).
"""


# def filter_num():
#     num1 = int(input("enter number for start: "))
#     num2 = int(input("enter number for end: "))
#     sum = 0
#     list1 = []

#     for i in range(num2):
#         sum += i
#         if sum % 2 == 0:
#             list1.append(sum)
#     return list1 

# print(filter_num())

###############################################################################################################################################

"""შექმენით ფუნქცია, რომელსაც გადასცემთ მომხმარებლის გვარს. გვარის თითოეული
 ასო გადაიტანეთ ახალ სიაში. შემდეგ for ციკლის გამოყენებით იმუშავეთ ამ სიაზე - 
 მარტო ლუწ ინდექსებზე მყოფი ასოები დაამატეთ ახალ სიაში. საბოლოოდ დააბრუნეთ ეს სია.
Bonus (არაა სავალდებულო): ეს სია გარდაქმენით სთრინგად და ამ სახით დააბრუნეთ. 
"""


# def lastname_break_up():
#     list1 = []
#     lastname = input("enter your lastname: ")
#     break_up = list(lastname)
#     int_numbers = len(break_up)

#     for i in range(int_numbers):
#         if i % 2 == 0:
#             list1.append(i)


#     return "breaked up word", break_up," len lastname ", int_numbers,' last name even numbers', list1



# print(lastname_break_up())


# # ეს მაგალითები მოვიხმარე და მოვიძიე ამ ფუნქციის შესაქმნელად 

# # even_numbers = brake_up[::2]

#     # numbers.append(even_numbers)

"""
# # s = "Hello, World!"
# # list_s = list(s)
# # print(list_s)


# # # Let's assume this is your list of strings
# # str_list = ["1", "2", "3", "4", "5"]

# # # Convert strings to integers
# # int_list = [int(i) for i in str_list]

# # print(int_list)"""

###############################################################################################################################################

"""შექმენით ფუნქცია, რომელსაც გადაეცემა რიცხვების სია. თქვენ უნდა დააბრუნოთ ამ სიის საშუალო არითმეტიკული ( ჯამი / სიგრძე )"""

# numbers = [1,5,7,2,78,1,23,6]

# def Arithmetic_average(list1):
#     sum = 0
    
#     for number in numbers:
        
#         quantity = len(numbers)
#         sum = sum + number
#         average = sum // quantity
#     print(list1)
#     return average 

# print("this numbers Arithmetic average is:",Arithmetic_average(numbers))


###############################################################################################################################################

"""
შექმენით ფუნქცია, რომელიც მიიღებს მომხმარებლისგან სიტყვას.
შემდეგ თქვენ უნდა მოახდინოთ ამ სიტყვის შებრუნება, მაგ:
word - drow. საბოლოდ კი დააბრუნეთ შედეგი."""


# def turn_around():
#     name = input("enter your name: ")
#     backward_word = name[::-1]

#     return backward_word

# print(turn_around())



###############################################################################################################################################


"""შექმენით ფუნქცია, რომელიც მიიღებს რიცხვების სიას და თქვენ დააბრუნებთ მის გაფილტრულ
 ვერსიას, რომელსაც არ ექნება დუპლიკატები (ერთი და იგივე ელემენტები)"""


# number_list = [1,2,3,4,5,2,1,6,5,6]


# def filtered_numbers(list1):
#     list1 = list(set(list1))
    
#     return list1

# filtered_numbers()


###############################################################################################################################################




